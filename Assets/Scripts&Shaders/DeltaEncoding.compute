// Each #kernel tells which function to compile; you can have many kernels
#pragma kernel CSMain

// Create a RenderTexture with enableRandomWrite flag and set it
// with cs.SetTexture
Texture2D<float4> OldTexture;
Texture2D<float4> NewTexture;
struct Data{
    float encoding;
    uint pos;
};

AppendStructuredBuffer<Data> Encoding;

[numthreads(8,8,1)]
void CSMain (uint3 id : SV_DispatchThreadID){    
    [branch]
    if( NewTexture[id.xy].r - OldTexture[id.xy].r != 0){
        Data tmp;
        tmp.encoding = NewTexture[id.xy].r - OldTexture[id.xy].r;
        tmp.pos = id.x;
        tmp.pos |= (id.y << 16);
        Encoding.Append(tmp); 
    }
}