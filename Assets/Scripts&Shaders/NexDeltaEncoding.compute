// Each #kernel tells which function to compile; you can have many kernels
#pragma kernel CSMain

// Create a RenderTexture with enableRandomWrite flag and set it
// with cs.SetTexture
RWTexture2D<float4> Result;
Texture2D<float4> OldTexture;
Texture2D<float4> NewTexture;

RWBuffer<int> Increment;


//groupshared int NextPos;

[numthreads(8,8,1)]
void CSMain (uint3 id : SV_DispatchThreadID){
    Result[id.xy] = float4(OldTexture[id.xy].r - NewTexture[id.xy].r, id.x, id.y, 0) ;
    int temp = int(Result[id.xy].r != 0);
    int val = 0;
    InterlockedAdd(Increment[0], temp, val);
}